# --- Defaults ---

# --- pymarl options ---
runner: "parallel" # Runs 1 env for an episode
mac: "dcntrl" # Basic controller
env: "highway" # Environment name
difficulty: "easy" # Difficulty level of the scenario
env_args: {} # Arguments for the environment
batch_size_run: 12 # Number of environments to run in parallel(original: 8)
test_nepisode: 20 # Number of episodes to test for
test_interval: 20000 # Test after {} timesteps have passed
test_greedy: True # Use greedy evaluation (if False, will set epsilon floor to 0
log_interval: 20000 # Log summary of stats after every {} timesteps
runner_log_interval: 20000 # Log runner stats (not test stats) every {} timesteps
learner_log_interval: 20000 # Log training stats every {} timesteps
t_max: 2000000 # Stop running after this many timesteps
use_cuda: True # Use gpu by default unless it isn't available
buffer_cpu_only: True # If true we won't keep all of the replay buffer in vram(default: True)

checkpoint_paths: ["results/models/ippo_highway__seed=658352736_09-18-01-37-05"] # need to have something in list, even if an empty string

num_test_episodes: 8 # Number of test episodes, must be larger than batch_size_run

# --- Logging options ---
use_tensorboard: True # Log results to tensorboard
save_model: True # Save the models to disk
save_model_interval: 100000 # Save models after this many timesteps
checkpoint_path: "" # Load a checkpoint from this path
evaluate: False # Evaluate model for test_nepisode episodes and quit (no training)
load_step: 0 # Load model trained on this many timesteps (0 if choose max possible)
save_replay: False # Saving the replay of the model loaded from checkpoint_path
local_results_path: "results" # Path for local results

# --- RL hyperparameters ---
gamma: 0.99
batch_size: 255 # 255 # Number of episodes to train on # CHANGE NAME TO MINIBATCH SIZE (Recommend: 255)
buffer_size: 256 # 256 #  # Size of the replay buffer (Recommend: 256)
lr: 0.0005 # Learning rate for agents
critic_lr: 0.0005 # Learning rate for critics
optim_alpha: 0.99 # RMSProp alphas
optim_eps: 0.00001 # RMSProp epsilon
grad_norm_clip: 10 # Reduce magnitude of gradients above this L2 norm

# --- Agent parameters ---
agent: "ippo"
critic: "ippo"
rnn_hidden_dim: 64 # Size of hidden state for rnn layers
mlp_hidden_dim: 64 # Size of MLP layers
obs_agent_id: True
obs_last_action: True

# --- Experiment running params ---
repeat_id: 1
label: ""

log_prefix: "no_GAT_easy_run3_continued" # prefix of tensorboard

###########################
max_history_len: 10 # History length in the observation wrapper

############################
# Behavior Net args
Behavior_enable: True # Enable behavior inference module
Behavior_warmup: 20000 # Wait for some steps before starting training behavioral incentive inference module
behavior_encoder_dim: 32 # Hidden layer dimension for behavioral incentive inference module encoder
num_encoder_layer: 1 # Hidden layer number for behavioral incentive inference module encoder
latent_dim: 8 # Dimension of behavioral incentive latent representation(8+64)
decoder_rnn_dim: 64 # Hidden layer dimension for behavioral incentive inference module decoder
num_decoder_layer: 1 # Hidden layer number for behavioral incentive inference module decoder

lr_behavior: 0.0001 # Learning rate of behavioral incentive inference module

decoder_dropout: 0.0 # Dropout rate of behavioral incentive inference module decoder

# Stable behavior update para
soft_update_enable: True # Allow using soft updating policy or not
soft_update_coef: 0.1 # Coefficient of soft updating policy
behavior_variation_penalty: 0 # trade-off of the stability term
thres_small_variation: 0.005 # Filter for the lowest value of latent variance

# Ablation
behavior_fully_connected: False # Use fully connected behavior module

##########################
# GAT traj prediction args
GAT_enable: False # Enable GAT inference module
GAT_use_behavior: False # Enable to use behavior latent state in GAT
GAT_warmup: 20000 # Wait for some steps before starting training instant incentive inference module
GAT_hidden_size: 32 # Hidden layer dimension for instant incentive inference module decoder
attention_dim: 32 # Dimension of instant incentive latent representation
teacher_forcing_ratio: 0 # Ratio of replacing predicted states with ground truth

pred_batch_size: 128 # Batch number for training instant incentive inference module(original: 64)
lr_predict: 0.00002 # Learning rate of instant incentive inference module
pred_dropout: 0.1 # Dropout rate of instant incentive inference module
pred_length: 1 # State prediction length (original: 5); now we only predict the next state

mlp_dim: 128  # original: 1024; small" 128
bottleneck_dim: 32  # try 1024
activation: "relu"
batch_norm: True
dropout: 0.1
#########################
use_max_grad_norm: True # Flag of using max_grad_norm
max_grad_norm: 10.0 # Value of using max_grad_norm

#######################
animation_enable: False # Allow creating animation
metrics_enable: True # Generate metrics for highway
